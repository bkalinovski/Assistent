#pragma checksum "D:\SpeechAsp\VAssistent\VAssistent\Views\VAssistent\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4e20b3ed77174458221434a7e144706785c07918"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_VAssistent_Index), @"mvc.1.0.view", @"/Views/VAssistent/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/VAssistent/Index.cshtml", typeof(AspNetCore.Views_VAssistent_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\SpeechAsp\VAssistent\VAssistent\Views\_ViewImports.cshtml"
using VAssistent;

#line default
#line hidden
#line 2 "D:\SpeechAsp\VAssistent\VAssistent\Views\_ViewImports.cshtml"
using VAssistent.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4e20b3ed77174458221434a7e144706785c07918", @"/Views/VAssistent/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ce9e919320c4c3c500f40924e04bb040d719dc5e", @"/Views/_ViewImports.cshtml")]
    public class Views_VAssistent_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<VAssistent.Assistent.API.Models.Demo>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(45, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 3 "D:\SpeechAsp\VAssistent\VAssistent\Views\VAssistent\Index.cshtml"
  
    ViewData["Title"] = "VAssistent";

#line default
#line hidden
            BeginContext(93, 2830, true);
            WriteLiteral(@"<h2>Virtual Assistent</h2>
<h4>(Alpha) v.0.1</h4>
<hr />
Examples of questions:
<ul style=""list-style-type:circle"">
    <li>What is the time?</li>
    <li>What is the weather for tomorrow?</li>
    <li>What is the weather for today like?</li>
    <li>Open chrome</li>
</ul>
<hr />
<input type=""text"" id=""phrase"" />
<button onclick=""loadDoc()"">load</button>
<hr />
<div id=""speech""></div>
<script>
    var html = """";
    function loadDoc() {
        var object;
        var phrase = document.getElementById(""phrase"").value;

        var xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200) {
                var old = html;
                html = """";
                object = JSON.parse(this.responseText);

                if (object.Type == ""BingSearch"")
                {
                    for (var i = 0; i < object.Value.length; i++) {
                        html += '<div style=""width:80%; margin-bo");
            WriteLiteral(@"ttom:10px; color:#2c3e50; background-color:#ecf0f1; text-align: left; padding:5px; font-size: 16px; margin-right: auto; margin-left: auto;"">';
                        html += '<div><a target=""_blank"" rel=""noopener noreferrer"" href=""' + object.Value[i].url + '"" style=""color:#3498db;"">' + object.Value[i].name + '</a></div>';
                        html += '<div style=""color:#2ecc71;"">' + object.Value[i].displayUrl + '</div>';
                        html += '<div>' + object.Value[i].snippet + '</div>';
                        html += '</div>';
                    }
                }
                if (object.hasOwnProperty('DisplayText'))
                {
                    html += '<div style=""width:80%; margin-bottom:10px; color:#2c3e50; background-color:#ecf0f1; text-align: left; padding:5px; font-size: 16px; margin-right: auto; margin-left: auto;"">';
                    html += '<div style=""color:#2c3e50;"">' + object.DisplayText + '</div>';
                    html += '</div>';
             ");
            WriteLiteral(@"   }
                if (object.Type == ""Local"")
                {
                    html += '<div style=""width:80%; margin-bottom:10px; color:#2c3e50; background-color:#ecf0f1; text-align: left; padding:5px; font-size: 16px; margin-right: auto; margin-left: auto;"">';
                    html += '<div style=""color:#2c3e50;"">' + object.Message + '</div>';
                    html += '</div>';
                }
                html += old;
                document.getElementById(""speech"").innerHTML = html;
            }
        };
        xhttp.open(""POST"", ""https://localhost:44325/VAssistent/RecogniseSpeech"", true);
        xhttp.setRequestHeader(""Content-type"", ""application/x-www-form-urlencoded"");
        xhttp.send(""text="" + phrase);
    }
</script>

");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<VAssistent.Assistent.API.Models.Demo> Html { get; private set; }
    }
}
#pragma warning restore 1591
